USE INVENTORY_UTT;

-- * SP GET_ASSET_GROUP
DROP PROCEDURE IF EXISTS GET_ASSET_GROUP;
DELIMITER //
CREATE PROCEDURE GET_ASSET_GROUP (
    IN IN_CHILD_CODE      VARCHAR(100),
    IN IN_PARENT_GROUP      VARCHAR(100),
    IN IN_PARENT_SGROUP     VARCHAR(100),
    IN IN_PARENT_AGROUP     VARCHAR(100),
    IN IN_CHILD_GROUP       VARCHAR(100),
    IN IN_CHILD_AGROUP      VARCHAR(100),
    IN IN_STATUS            BOOL,
    OUT OUT_MSG             VARCHAR(450)
) BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
		GET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO, @errmsg = MESSAGE_TEXT;
		SET OUT_MSG = HANDLE_EXCEPTION('GET_ASSET_GROUP', @errno, @errmsg);
	END;
    SET OUT_MSG = 'OK';

	SELECT
	    *
	FROM
         VW_ASSET_GROUP
    WHERE
        CHILD_CODE      =   IFNULL(IN_CHILD_CODE, CHILD_CODE)
    AND PARENT_GROUP    =   IFNULL(IN_PARENT_GROUP, PARENT_GROUP)
    AND CHILD_GROUP     =   IFNULL(IN_CHILD_GROUP, CHILD_GROUP)
    AND STATUS          =   GET_STS_FN(IN_STATUS)
    OR  (
                PARENT_SGROUP   =   IFNULL(IN_PARENT_SGROUP, PARENT_SGROUP)
            OR  PARENT_AGROUP   =   IFNULL(IN_PARENT_AGROUP, PARENT_AGROUP)
            OR  CHILD_AGROUP    =   IFNULL(IN_CHILD_AGROUP, CHILD_AGROUP)
    );
END //
DELIMITER ;

-- * SP GET_ASSET_GROUP
DROP PROCEDURE IF EXISTS GET_USER;
DELIMITER //
CREATE PROCEDURE GET_USER (
    IN IN_USERNAME          VARCHAR(20),
    IN IN_NAME              VARCHAR(150),
    IN IN_LASTNAME          VARCHAR(150),
    IN IN_STATUS            BOOL,
    OUT OUT_MSG             VARCHAR(450)
) BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
		GET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO, @errmsg = MESSAGE_TEXT;
		SET OUT_MSG = HANDLE_EXCEPTION('GET_ASSET_GROUP', @errno, @errmsg);
	END;
    SET OUT_MSG = 'OK';


END //
DELIMITER ;